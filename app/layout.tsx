"use client"
import { Container, CssBaseline,createTheme,ThemeProvider } from '@mui/material';
import './globals.css'
import { AuthContextProvider } from "@/context/AuthContext";

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const AppBarHeight = 60;

const theme = createTheme({
  components: {
      MuiToolbar: {
          styleOverrides: {
              dense: {
                  height: AppBarHeight,
                  minHeight: 60
              }
          }
      }
  },
})

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body>
        <AuthContextProvider>
          <ThemeProvider theme={theme}>
          <TitleContextProvider>
          <Container maxWidth="sm" sx={{height:'100%',padding:0}}>
            <ButtonAppBar/>
            
            <Box sx={{padding:1,height: `calc(100% - ${AppBarHeight}px)`,border:'1px solid red'}}>
            {children}
            </Box>
            <CssBaseline/>
          </Container>
          </TitleContextProvider>
          </ThemeProvider>
        </AuthContextProvider>
      </body>
    </html>
  )
}

import * as React from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import { useAuthContext } from '@/context/AuthContext';
import { useRouter } from 'next/navigation';
import { logout } from '@/net/auth';
import { TitleContextProvider, useTitleContext } from '@/context/TitleContext';

export function ButtonAppBar() {
  const {user} = useAuthContext();
  const {title} = useTitleContext();

  const isLogin = user ? true: false;
  const router = useRouter();


   const handleSignOut = async () => {
    try {
      await logout();
      console.log("Logout Success");
      router.push('/')
    } catch (e) {
      console.log("Logout error: ", e.message);
    }
  };

  const handleSignIn = () => {
    router.push('/login');
  }


  return (
    <Box sx={{ flexGrow: 1 }}>
      <AppBar position="static">
        <Toolbar variant='dense'>
          <IconButton
            size="large"
            edge="start"
            color="inherit"
            aria-label="menu"
            sx={{ mr: 2 }}
          >
            <MenuIcon />
          </IconButton>
          <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
            {title ? title : "App"}
          </Typography>
          {isLogin ? 
          <Button color="inherit" onClick={handleSignOut}>Logout</Button> 
          : 
          <Button color="inherit" onClick={handleSignIn}>Login</Button>}
          
        </Toolbar>
      </AppBar>
    </Box>
  );
}